{"pages":[{"title":"About Me","text":"","link":"/about/index.html"}],"posts":[{"title":"GitHub/Gitee Pages + Hexo","text":"使用GitHub/Gitee Pages + hexo搭建个人博客。 Requirements Node.js Git Install Hexo:12345$ npm install -g hexo-cli$ npm ls -g --depth=0/usr/local/lib├── hexo-cli@1.1.0└── npm@6.4.1 若出现permission denied,请在命令前加sudo。 新建一个网站官网给出以下一套命令进行建站。 1234$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install 在当前版本的hexo-cli，npm install不需要执行，在init的时候会安装相应的依赖。 启动服务器1$ hexo server 默认情况下，访问网址为： http://localhost:4000。 Theme默认主题存放于&lt;folder&gt;/themes下，为landscape。你可以从主题列表中挑选自己喜欢的主题，下载并替换。 下载 123$ cd themes/$ git clone https://github.com/probberechts/hexo-theme-cactus.git$ rm -rf landscape/ 修改_config.yml文件: 1theme: hexo-theme-cactus 重新启动服务器进行预览 1$ hexo server","link":"/documents/Technology/Git/github-gitee-pages-hexo.html"},{"title":"Docker Deploy Test","text":"Docker部署Spring Boot应用，以测试Spring Cloud相关组件。 12$ scp -r hanzo@10.122.22.115:/home/hanzo/Workspace/MicroServices/esp-framework .$ scp hanzo@10.122.22.115:/home/hanzo/Workspace/MicroServices/esp-framework/esp-gateway/target/gateway-0.0.1-SNAPSHOT.jar . Runing Mode maven 123$ mvn spring-boot:run \\ -DCFG_CONFIG_HOST=10.122.22.115 \\ -Deureka.client.serviceUrl.defaultZone=http://10.122.22.115:8761/eureka java 123$ java -jar gateway-0.0.1-SNAPSHOT.jar \\ --CFG_CONFIG_HOST=10.122.22.115 \\ --eureka.client.serviceUrl.defaultZone=http://10.122.22.115:8761/eureka docker 1234567891011121314151617181920$ mvn clean package -Dmaven.test.skip=true docker:build$ docker run -d --name esp-registry -p 8761:8761 10.122.22.115:5000/esp-registry$ docker run -d --name esp-config -p 8750:8750 \\ -e CFG_EUREKA_HOST=10.122.22.115 \\ 10.122.22.115:5000/esp-config \\ ; docker logs -f esp-gateway$ docker run -d --name esp-gateway -p 8765:8765 \\ -e CFG_CONFIG_HOST=10.122.22.115 \\ -e SPRING_CLOUD_CONFIG_LABEL=env \\ 10.122.22.115:5000/esp-gateway \\ ; docker logs -f esp-gateway$ docker run -d --name esp-admin -p 8085:8085 \\ -e CFG_CONFIG_HOST=10.122.22.115 \\ -e SPRING_CLOUD_CONFIG_LABEL=env \\ 10.122.22.115:5000/esp-admin \\ ; docker logs -f esp-admin Docker Command Create tag 1234$ docker tag 10.122.22.115:5000/esp-registry 10.122.22.115:5000/esp-registry$ docker tag 10.122.22.115:5000/esp-config 10.122.22.115:5000/esp-config$ docker tag 10.122.22.115:5000/esp-gateway 10.122.22.115:5000/esp-gateway$ docker tag 10.122.22.115:5000/esp-admin10.122.22.115:5000/esp-admin Remove container 1234567$ docker rm -v $(docker stop esp-registry)$ docker rm -v $(docker stop esp-config)$ docker rm -v $(docker stop esp-gateway)$ docker rm -v $(docker stop esp-admin)#! or$ docker ps -a --filter \"name=esp-*\"$ docker rm -v $(docker ps -a --filter \"name=esp-*\" -q) Remove image 12345$ docker images -f \"reference=10.122.22.115:5000/esp-*\"$ docker rmi $(docker images 10.122.22.115:5000/* -q)#! or$ docker rmi -f $(docker images -f \"reference=10.122.22.115:5000/esp-*\" -q) Docker Settings /etc/systemd/system/docker.service.d/http-proxy.conf 123[Service]Environment=&quot;HTTP_PROXY=http://proxy1.bj.petrochina:8080&quot;Environment=&quot;HTTPS_PROXY=http://proxy1.bj.petrochina:8080&quot; &quot;NO_PROXY=localhost, 127.0.0.1, 10.27.213.66, 10.27.213.69, 10.122.22.115&quot; /etc/docker/daemon.json 1234&#123; &quot;registry-mirrors&quot;: [&quot;https://ik8akj45.mirror.aliyuncs.com&quot;], &quot;insecure-registries&quot;: [&quot;10.27.213.66:5000&quot;, &quot;10.122.22.115:5000&quot;]&#125; /var/lib/docker/containers/CONTAINER_ID/hostconfig.json 123456# update port mapping&#123; ... &quot;PortBindings&quot;:&#123;&quot;5000/tcp&quot;:[&#123;&quot;HostIp&quot;:&quot;&quot;,&quot;HostPort&quot;:&quot;5000&quot;&#125;]&#125; ...&#125; http: server gave HTTP response to HTTPS client 1234567$ vim /etc/docker/daemon.json&#123; \"insecure-registries\":[\"10.122.22.115:5000\"]&#125;$ sudo systemctl daemon-reload$ sudo systemctl restart docker net/http: request canceled (Client.Timeout exceeded while awaiting headers) 12345$ vim /etc/docker/daemon.json&#123; \"registry-mirrors\": [\"https://ik8akj45.mirror.aliyuncs.com\"] # \"registry-mirrors\":[\"https://docker.mirrors.ustc.edu.cn\"]&#125; Questions spring.cloud.client.ip-address[10.27.213.167/172.16.81.167] spring.cloud.client.ip-address[10.27.213.167/172.16.81.167]","link":"/documents/Technology/Docker/docker-deploy-test.html"}],"tags":[{"name":"Git Pages","slug":"Git-Pages","link":"/tags/Git-Pages/"},{"name":"Docker","slug":"Docker","link":"/tags/Docker/"}],"categories":[{"name":"Technology","slug":"Technology","link":"/categories/Technology/"},{"name":"Git","slug":"Technology/Git","link":"/categories/Technology/Git/"},{"name":"Docker","slug":"Technology/Docker","link":"/categories/Technology/Docker/"}]}